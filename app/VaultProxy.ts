import { parseAbi } from "viem"
export const vaultABI = [
    { stateMutability: "nonpayable", type: "constructor", inputs: [] },
    { type: "error", inputs: [], name: "AuthorizationAlreadySet" },
    { type: "error", inputs: [], name: "DepositCapExceeded" },
    {
        type: "error",
        inputs: [
            { name: "trader", internalType: "address", type: "address" },
            { name: "fund", internalType: "uint256", type: "uint256" },
            { name: "delta", internalType: "int256", type: "int256" },
        ],
        name: "InsufficientFund",
    },
    { type: "error", inputs: [{ name: "marketId", internalType: "uint256", type: "uint256" }], name: "InvalidMarket" },
    {
        type: "error",
        inputs: [
            { name: "actual", internalType: "uint256", type: "uint256" },
            { name: "target", internalType: "uint256", type: "uint256" },
        ],
        name: "MismatchedTransferAmount",
    },
    {
        type: "error",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "NotEnoughFreeCollateral",
    },
    { type: "error", inputs: [], name: "NotWhitelistedAuthorization" },
    { type: "error", inputs: [], name: "Unauthorized" },
    { type: "error", inputs: [], name: "ZeroAmount" },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "authorizer", internalType: "address", type: "address", indexed: true },
            { name: "authroized", internalType: "address", type: "address", indexed: true },
            { name: "isAuthorized", internalType: "bool", type: "bool", indexed: false },
        ],
        name: "AuthorizationSet",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256", indexed: true },
            { name: "badDebtDelta", internalType: "int256", type: "int256", indexed: false },
        ],
        name: "BadDebtChanged",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "trader", internalType: "address", type: "address", indexed: true },
            { name: "fundDelta", internalType: "int256", type: "int256", indexed: false },
        ],
        name: "FundChanged",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [{ name: "version", internalType: "uint8", type: "uint8", indexed: false }],
        name: "Initialized",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256", indexed: true },
            { name: "trader", internalType: "address", type: "address", indexed: true },
            { name: "marginDelta", internalType: "int256", type: "int256", indexed: false },
        ],
        name: "MarginChanged",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256", indexed: true },
            { name: "trader", internalType: "address", type: "address", indexed: true },
            { name: "realizedPnl", internalType: "int256", type: "int256", indexed: false },
            { name: "settledPnl", internalType: "int256", type: "int256", indexed: false },
            { name: "margin", internalType: "uint256", type: "uint256", indexed: false },
            { name: "unsettledPnl", internalType: "int256", type: "int256", indexed: false },
            { name: "pnlPoolBalance", internalType: "uint256", type: "uint256", indexed: false },
        ],
        name: "PnlSettled",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256", indexed: true },
            { name: "trader", internalType: "address", type: "address", indexed: true },
            { name: "maker", internalType: "address", type: "address", indexed: false },
            { name: "positionSizeDelta", internalType: "int256", type: "int256", indexed: false },
            { name: "openNotionalDelta", internalType: "int256", type: "int256", indexed: false },
            { name: "realizedPnl", internalType: "int256", type: "int256", indexed: false },
            { name: "reason", internalType: "enum PositionChangedReason", type: "uint8", indexed: false },
        ],
        name: "PositionChanged",
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "addressManager",
        outputs: [{ name: "", internalType: "contract IAddressManager", type: "address" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "trader", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "deposit",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "price", internalType: "uint256", type: "uint256" },
        ],
        name: "getAccountValue",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "marketId", internalType: "uint256", type: "uint256" }],
        name: "getBadDebt",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [],
        name: "getCollateralToken",
        outputs: [{ name: "", internalType: "address", type: "address" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "price", internalType: "uint256", type: "uint256" },
        ],
        name: "getFreeCollateral",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "price", internalType: "uint256", type: "uint256" },
            { name: "marginRequirementType", internalType: "enum MarginRequirementType", type: "uint8" },
        ],
        name: "getFreeCollateralForTrade",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getFreeMargin",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "trader", internalType: "address", type: "address" }],
        name: "getFund",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getMargin",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "price", internalType: "uint256", type: "uint256" },
        ],
        name: "getMarginRatio",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "marginRequirementType", internalType: "enum MarginRequirementType", type: "uint8" },
        ],
        name: "getMarginRequirement",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getOpenNotional",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getPendingMargin",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [{ name: "marketId", internalType: "uint256", type: "uint256" }],
        name: "getPnlPoolBalance",
        outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getPositionSize",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getSettledMargin",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "price", internalType: "uint256", type: "uint256" },
        ],
        name: "getUnrealizedPnl",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
        ],
        name: "getUnsettledPnl",
        outputs: [{ name: "", internalType: "int256", type: "int256" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "_addressManager", internalType: "address", type: "address" },
            { name: "collateralToken", internalType: "address", type: "address" },
        ],
        name: "initialize",
        outputs: [],
    },
    {
        stateMutability: "view",
        type: "function",
        inputs: [
            { name: "authorizer", internalType: "address", type: "address" },
            { name: "authorized", internalType: "address", type: "address" },
        ],
        name: "isAuthorized",
        outputs: [{ name: "", internalType: "bool", type: "bool" }],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "authorized", internalType: "address", type: "address" },
            { name: "isAuthorized_", internalType: "bool", type: "bool" },
        ],
        name: "setAuthorization",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            {
                name: "params",
                internalType: "struct IVault.SettlePositionParams",
                type: "tuple",
                components: [
                    { name: "marketId", internalType: "uint256", type: "uint256" },
                    { name: "taker", internalType: "address", type: "address" },
                    { name: "maker", internalType: "address", type: "address" },
                    { name: "takerPositionSize", internalType: "int256", type: "int256" },
                    { name: "takerOpenNotional", internalType: "int256", type: "int256" },
                    { name: "reason", internalType: "enum PositionChangedReason", type: "uint8" },
                ],
            },
        ],
        name: "settlePosition",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transfer",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "from", internalType: "address", type: "address" },
            { name: "to", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFund",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFundToMargin",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transferFundToMargin",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "trader", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transferMarginToFund",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [
            { name: "marketId", internalType: "uint256", type: "uint256" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "transferMarginToFund",
        outputs: [],
    },
    {
        stateMutability: "nonpayable",
        type: "function",
        inputs: [{ name: "amount", internalType: "uint256", type: "uint256" }],
        name: "withdraw",
        outputs: [],
    },
    { stateMutability: "nonpayable", type: "function", inputs: [], name: "withdrawAllCollateral", outputs: [] },
] as const
